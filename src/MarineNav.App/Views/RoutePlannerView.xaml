<UserControl x:Class="MarineNav.App.Views.RoutePlannerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MarineNav.App.Views"
             xmlns:vm="clr-namespace:MarineNav.App.ViewModels"
             xmlns:app="clr-namespace:MarineNav.App"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000">
    <UserControl.Resources>
        <app:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <local:BoolToIndexConverter x:Key="BoolToIndexConverter"/>
        <local:BoolToBackgroundConverter x:Key="BoolToBackgroundConverter"/>
    </UserControl.Resources>
    
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <TextBlock Grid.Row="0" Text="Route Planner" FontSize="24" FontWeight="Bold" Margin="0,0,0,15"/>

        <!-- Route Settings Panel -->
        <Border Grid.Row="1" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" Padding="15" Margin="0,0,0,10" Background="{DynamicResource PanelBackgroundBrush}">
            <StackPanel>
                <!-- Row 1: Route Name and Units -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Route Name:" VerticalAlignment="Center" Margin="0,0,10,0" FontWeight="SemiBold"/>
                    <TextBox Grid.Column="1" Text="{Binding RouteName, UpdateSourceTrigger=PropertyChanged}" 
                             Padding="5" Height="28"/>

                    <TextBlock Grid.Column="3" Text="Units:" VerticalAlignment="Center" Margin="0,0,10,0" FontWeight="SemiBold"/>
                    <ComboBox Grid.Column="4" SelectedIndex="{Binding UseNauticalUnits, Converter={StaticResource BoolToIndexConverter}}" 
                              MinWidth="180" Padding="5" Height="28">
                        <ComboBoxItem Content="Knots / Nautical Miles"/>
                        <ComboBoxItem Content="MPH / Statute Miles"/>
                    </ComboBox>

                    <CheckBox Grid.Column="6" IsChecked="{Binding Use12HourFormat}" 
                              Content="Use 12-hour format (AM/PM)"
                              VerticalAlignment="Center"/>
                </Grid>

                <!-- Row 2: Route Type Selection -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Route Type:" VerticalAlignment="Center" Margin="0,0,15,0" FontWeight="SemiBold"/>
                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <RadioButton Content="Great Circle (shortest distance)" 
                                     IsChecked="{Binding IsGreatCircleMode, Mode=OneWay}"
                                     GroupName="RouteType"
                                     Margin="0,0,30,0" 
                                     Command="{Binding RouteTypeCommand}"
                                     CommandParameter="GreatCircle"/>
                        <RadioButton Content="Rhumb Line (constant bearing)" 
                                     IsChecked="{Binding IsRhumbLineMode, Mode=OneWay}"
                                     GroupName="RouteType"
                                     Command="{Binding RouteTypeCommand}"
                                     CommandParameter="RhumbLine"/>
                    </StackPanel>
                </Grid>

                <!-- Separator -->
                <Separator Margin="0,0,0,15"/>

                <!-- Calculation Mode Selection -->
                <TextBlock Text="What do you want to calculate?" FontWeight="Bold" FontSize="14" Margin="0,0,0,10"/>
                
                <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                    <RadioButton Content="Arrival Time" IsChecked="{Binding IsArrivalMode, Mode=OneWay}" 
                                 Command="{Binding CalculationModeCommand}"
                                 CommandParameter="Arrival"
                                 GroupName="CalcMode"
                                 Margin="0,0,30,0" FontSize="13" VerticalContentAlignment="Center"/>
                    <RadioButton Content="Departure Time" IsChecked="{Binding IsDepartureMode, Mode=OneWay}"
                                 Command="{Binding CalculationModeCommand}"
                                 CommandParameter="Departure"
                                 GroupName="CalcMode"
                                 Margin="0,0,30,0" FontSize="13" VerticalContentAlignment="Center"/>
                    <RadioButton Content="Required Speed" IsChecked="{Binding IsSpeedMode, Mode=OneWay}"
                                 Command="{Binding CalculationModeCommand}"
                                 CommandParameter="Speed"
                                 GroupName="CalcMode"
                                 FontSize="13" VerticalContentAlignment="Center"/>
                </StackPanel>

                <!-- Input Fields Grid -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition Width="90"/>
                    </Grid.ColumnDefinitions>

                    <!-- Speed -->
                    <TextBlock Grid.Column="0" Text="{Binding SpeedLabel}" VerticalAlignment="Center" Margin="0,0,10,0" FontWeight="SemiBold"/>
                    <TextBox Grid.Column="1" Text="{Binding DisplaySpeed, UpdateSourceTrigger=PropertyChanged}" 
                             Padding="5" Height="28"
                             IsEnabled="{Binding SpeedEnabled}"/>

                    <!-- Departure (Start) Time -->
                    <TextBlock Grid.Column="3" VerticalAlignment="Center" Margin="0,0,10,0" FontWeight="SemiBold">
                        <Run Text="Departure:"/>
                    </TextBlock>
                    <DatePicker Grid.Column="4" SelectedDate="{Binding StartTime, Mode=TwoWay}" 
                                Height="28"
                                IsEnabled="{Binding StartTimeEnabled}"/>
                    <TextBox Grid.Column="5" Text="{Binding StartTimeString, UpdateSourceTrigger=PropertyChanged}" 
                             Padding="5" Height="28" ToolTip="Time: HH:mm, h:mm AM/PM, or 4 digits (1645 = 16:45)"
                             IsEnabled="{Binding StartTimeEnabled}"/>

                    <!-- Arrival (End) Time -->
                    <TextBlock Grid.Column="7" VerticalAlignment="Center" Margin="0,0,10,0" FontWeight="SemiBold">
                        <Run Text="Arrival:"/>
                    </TextBlock>
                    <DatePicker Grid.Column="8" SelectedDate="{Binding EndTime, Mode=TwoWay}" 
                                Height="28"
                                IsEnabled="{Binding EndTimeEnabled}"/>
                    <TextBox Grid.Column="9" Text="{Binding EndTimeString, UpdateSourceTrigger=PropertyChanged}" 
                             Padding="5" Height="28" ToolTip="Time: HH:mm, h:mm AM/PM, or 4 digits (1645 = 16:45)"
                             IsEnabled="{Binding EndTimeEnabled}"/>
                </Grid>

                <!-- Mode Description -->
                <Border BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" 
                        Background="{DynamicResource ContentBackgroundBrush}" 
                        Padding="10" Margin="0,15,0,0" CornerRadius="3">
                    <TextBlock FontSize="11" TextWrapping="Wrap" Foreground="{DynamicResource SecondaryTextBrush}">
                        <Run Text="ℹ️ " FontSize="13"/>
                        <Run x:Name="ModeDescription" Text="{Binding ModeDescription, Mode=OneWay}"/>
                    </TextBlock>
                </Border>
            </StackPanel>
        </Border>

        <!-- Waypoints Section -->
        <Grid Grid.Row="2" Margin="0,0,0,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Text="Waypoints" FontSize="18" FontWeight="Bold" Margin="0,0,0,10"/>

            <Border Grid.Row="1" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" Background="{DynamicResource PanelBackgroundBrush}">
                <DataGrid ItemsSource="{Binding Waypoints}" 
                          AutoGenerateColumns="False" 
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          SelectionMode="Single"
                          GridLinesVisibility="Horizontal"
                          HeadersVisibility="Column"
                          AlternatingRowBackground="{DynamicResource AlternateRowBackgroundBrush}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="#" Binding="{Binding Number}" Width="40" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Width="120"/>
                        <DataGridTextColumn Header="Latitude" Binding="{Binding LatitudeInput, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                        <DataGridTextColumn Header="Longitude" Binding="{Binding LongitudeInput, UpdateSourceTrigger=PropertyChanged}" Width="*"/>
                        <DataGridTemplateColumn Header="Actions" Width="Auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Content="▲" Command="{Binding DataContext.MoveWaypointUpCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                CommandParameter="{Binding}" Width="30" Height="25" Margin="2"/>
                                        <Button Content="▼" Command="{Binding DataContext.MoveWaypointDownCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                CommandParameter="{Binding}" Width="30" Height="25" Margin="2"/>
                                        <Button Content="✕" Command="{Binding DataContext.DeleteWaypointCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                CommandParameter="{Binding}" Width="30" Height="25" Margin="2" Foreground="Red"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Border>

            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,10,0,0">
                <Button Content="+ Add Waypoint" Command="{Binding AddWaypointCommand}" 
                        Padding="10,5" Margin="0,0,10,0" Background="{DynamicResource AccentBrush}" Foreground="{DynamicResource PrimaryTextBrush}" BorderThickness="0"/>
                <Button Content="Calculate Route" Command="{Binding CalculateRouteCommand}" 
                        Padding="10,5" Margin="0,0,10,0" Background="{DynamicResource SuccessBrush}" Foreground="{DynamicResource PrimaryTextBrush}" BorderThickness="0"/>
                <Button Content="Clear All" Command="{Binding ClearRouteCommand}" 
                        Padding="10,5" Margin="0,0,10,0" Background="{DynamicResource ErrorBrush}" Foreground="{DynamicResource PrimaryTextBrush}" BorderThickness="0"/>
                <Separator Width="20" Visibility="Hidden"/>
                <Button Content="Import CSV" Command="{Binding ImportCsvCommand}" 
                        Padding="10,5" Margin="0,0,5,0"/>
                <Button Content="Import GPX" Command="{Binding ImportGpxCommand}" 
                        Padding="10,5" Margin="0,0,10,0"/>
                <Button Content="Export CSV" Command="{Binding ExportCsvCommand}" 
                        Padding="10,5" Margin="0,0,5,0"/>
                <Button Content="Export GPX" Command="{Binding ExportGpxCommand}" 
                        Padding="10,5" Margin="0,0,10,0"/>
                <Button Content="🖨 Print" Command="{Binding PrintCommand}" 
                        Padding="10,5"/>
            </StackPanel>
        </Grid>

        <!-- Error Message -->
        <TextBlock Grid.Row="3" Text="{Binding ErrorMessage}" Foreground="Red" FontWeight="Bold" 
                   Margin="0,0,0,10" Visibility="{Binding ErrorMessage, Converter={StaticResource NullToVisibilityConverter}}"/>

        <!-- Legs Section -->
        <Grid Grid.Row="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Text="Calculated Legs" FontSize="18" FontWeight="Bold" Margin="0,0,0,10"/>

            <Border Grid.Row="1" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" Background="{DynamicResource PanelBackgroundBrush}">
                <DataGrid ItemsSource="{Binding Legs}" 
                          AutoGenerateColumns="False" 
                          IsReadOnly="True"
                          SelectionMode="Single"
                          GridLinesVisibility="Horizontal"
                          HeadersVisibility="Column"
                          AlternatingRowBackground="{DynamicResource AlternateRowBackgroundBrush}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="#" Binding="{Binding Number}" Width="40"/>
                        <DataGridTextColumn Header="From" Binding="{Binding From}" Width="100"/>
                        <DataGridTextColumn Header="To" Binding="{Binding To}" Width="100"/>
                        <DataGridTextColumn Header="Distance" Binding="{Binding DisplayDistance}" Width="90"/>
                        <DataGridTextColumn Header="True" Binding="{Binding DisplayTrueBearing}" Width="70"/>
                        <DataGridTextColumn Header="Magnetic" Binding="{Binding DisplayMagneticBearing}" Width="80"/>
                        <DataGridTextColumn Header="Cardinal" Binding="{Binding Cardinal}" Width="80"/>
                        <DataGridTextColumn Header="Variation" Binding="{Binding DisplayVariation}" Width="80"/>
                        <DataGridTextColumn Header="Time" Binding="{Binding DisplayTime}" Width="90"/>
                        <DataGridTextColumn Header="ETA" Binding="{Binding DisplayETA}" Width="100"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Border>

            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                <TextBlock Text="Total Distance: " FontWeight="Bold"/>
                <TextBlock Text="{Binding TotalDistance, StringFormat={}{0:F1} NM}" Margin="0,0,20,0"/>
                <TextBlock Text="Total Time: " FontWeight="Bold"/>
                <TextBlock Text="{Binding TotalTime}"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
